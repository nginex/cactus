<?php

use Drupal\Component\Utility\Html;
use Drupal\Core\Link;
use Drupal\Core\Render\Markup;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;
use Drupal\file\Entity\File;
use Drupal\node\Entity\Node;

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
 * Implements hook_preprocess_node().
 */
function cactus_preprocess_node(&$vars) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $vars['node'];
  $node_type = $node->getType();

  if ($node_type == 'slideshow' && $vars['view_mode'] == 'teaser') {
    // Add background image.
    $image = File::load($node->get('field_image')->target_id);

    $url = file_create_url($image->getFileUri());
    $vars['attributes']['style'] = "background-image: url({$url});";

    if (!$node->get('field_link')->isEmpty()) {
      $url = Url::fromUri($node->get('field_link')->uri);
      $vars['read_more_link'] = Link::fromTextAndUrl(t('Read'), $url)->toRenderable();
    }
  }

  if ($node_type == 'author' && $vars['view_mode'] == 'teaser') {
    $vars['read_mode_link'] = Link::createFromRoute(t("Read author's articles"), 'entity.node.canonical', [
      'node' => $node->id(),
    ])->toRenderable();

    $items = [];

    if ($email = $node->get('field_email')->value) {
      $url = Url::fromUri('mailto:' . $email, [
        'attributes' => [
          'class' => [
            'social-item',
            'email',
          ],
          'title' => t('Send email to the author'),
        ],
      ]);
      $items[] = Link::fromTextAndUrl(t('Email'), $url)->toString();
    }

    $vars['social'] = [
      '#theme' => 'item_list',
      '#items' => $items,
    ];
  }

  if ($node_type == 'article' && $vars['view_mode'] == 'teaser') {
    $nid = $node->id();

    /** @var \Drupal\views\ViewExecutable $view */
    $view = $vars['view'];

    // Get current index in the related view.
    $index = 0;
    foreach ($view->result as $row) {
      if ($row->nid == $nid) {
        $index = $row->index + 1;
        break;
      }
    }

    $file = File::load($node->get('field_image')->target_id);
    $vars['image'] = [
      '#theme' => 'image_style',
      '#style_name' => $index % 2 ? '368x246sc' : '368x552sc',
      '#uri' => $file->getFileUri(),
      '#attached' => ['library' => ['cactus/masonry']],
      '#cache' => [
        'max-age' => 0,
      ],
    ];

    $body = render($vars['content']['body']);
    $vars['body'] = [
      '#markup' => Markup::create(Html::normalize($body)),
    ];
    $vars['category_key'] = $node->get('field_category')->value;
    $vars['title'] = $node->getTitle();
    $vars['date'] = date('F d, Y', $node->getCreatedTime());

    $authors_nids = $node->get('field_authors')->getValue();
    $authors_nids = array_column($authors_nids, 'target_id');

    /** @var \Drupal\node\Entity\Node[] $authors */
    $authors = Node::loadMultiple($authors_nids);
    $authors_names = [];
    foreach ($authors as $author) {
      $authors_names[] = $author->toLink()->toString();
    }

    $vars['read_more_link'] = $node->toLink(t('Read more'))->toRenderable();
    $vars['author_links'] = [
      '#markup' => Markup::create(implode(', ', $authors_names)),
    ];
  }
}

/**
 * Implements hook_preprocess_node().
 */
function cactus_preprocess_block(&$vars) {
  switch ($vars['base_plugin_id']) {
    case 'system_branding_block':
      if ($vars['site_name'] && $vars['site_logo']) {
        $vars['site_logo'] = '/' . drupal_get_path('theme', 'cactus') . '/images/logo_with_name_black.png';
        $vars['site_name'] = '';
      }
      else {
        $vars['site_logo'] = '/' . drupal_get_path('theme', 'cactus') . '/images/logo_with_name_white.png';
      }
      break;
  }
}

/**
 * Implements hook_preprocess_page().
 */
function cactus_preprocess_page(&$vars) {
  $top_bar_attributes = new Attribute();

  if (!empty($vars['node'])) {
    /** @var \Drupal\node\Entity\Node $node */
    $node = $vars['node'];

    switch ($node->getType()) {
      case 'article':
        // Don't use breadcrumbs.
        unset($vars['page']['top_bar']['cactus_breadcrumbs']);

        // Add background image.
        $image = File::load($node->get('field_image')->target_id);

        $url = file_create_url($image->getFileUri());
        $top_bar_attributes->addClass('article__full-image');
        $top_bar_attributes->setAttribute('style', "background-image: url({$url});");
        break;

      case 'author':
        $vars['page']['top_bar']['author_title_wrapper'] = [
          '#type' => 'container',
          '#attributes' => ['class' => ['author__title-wrapper']],
          '#weight' => $vars['page']['top_bar']['cactus_page_title']['#weight'],
          'title' => $vars['page']['top_bar']['cactus_page_title'],
          'social' => $vars['page']['top_bar']['authorsocial'],
        ];

        // Don't use breadcrumbs.
        unset($vars['page']['top_bar']['cactus_breadcrumbs']);
        unset($vars['page']['top_bar']['cactus_page_title']);
        unset($vars['page']['top_bar']['authorsocial']);

        $top_bar_attributes->addClass('author-node-bar');
        break;
    }
  }

  $vars['top_bar_attributes'] = $top_bar_attributes;
}
